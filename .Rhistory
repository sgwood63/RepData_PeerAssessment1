con <- gzfile("activity.zip")
activity <- read.csv(con)
activity <- read.csv("activity.csv")
View(activity)
View(activity)
activity <- read.csv("activity.zip")
activity <- read.csv(gzfile("activity.zip"))
activity <- read.csv(unz("activity.zip"))
activity <- read.table("activity.zip", header=T, quote="\"", sep=",")
unzip("activity.zip")
activity <- read.csv("activity.csv")
unzip("activity.zip")
hist(activity$date, activity$steps)
hist(activity$steps, activity$date)
str(activity)
library(dplyr)
validActivity <- filter(activity, !is.na(steps))
View(validActivity)
activity$date <- as.Date(activity$date)
str(activity)
hist(activity$date, activity$steps)
activity[1,2]
year(activity[1,2])
?Date
format(activity[1,2], "%d %b %Y")
plot(activity$date, activity$steps)
summary(activity)
activity <- read.csv("activity.csv", colClasses=c("int",'Date", "int"))
)
)
""
.
')'
')
activity <- read.csv("activity.csv", colClasses=c("int","Date", "int"))
activity <- read.csv("activity.csv", colClasses=c("int","Date", "int"), na.strings = c("NA"))
activity <- read.csv("activity.csv", colClasses=c("integer","Date", "integer"), na.strings = c("NA"))
str(activity)
hist(activity$steps)
hist(activity$steps, breaks = 30)
mean(activity$steps)
mean(activity$steps, na.rm = TRUE)
median(activity$steps, na.rm = TRUE)
?median
hist(log10(activity$steps), breaks = 30)
str(validActivity)
hist(validActivity$steps, breaks = 30)
hist(log10(validActivity$steps), breaks = 30)
median(validActivity$steps, na.rm = TRUE)
plot(activity$date, activity$steps, type = "l")
byDate <- summarize(group_by(activity, date), dailySteps=sum(steps))
hist(byDate)
View(byDate)
hist(byDate$dailySteps)
mean(byDate$dailySteps, na.rm = TRUE)
median(byDate$dailySteps, na.rm = TRUE)
hist(byDate$dailySteps, breaks=20)
plot(activity$interval, activity$steps, type = "l")
byInterval <- summarize(group_by(activity, interval), meanSteps=mean(steps))
plot(byInterval$interval, byInterval$meanSteps, type = "l")
View(byInterval)
byInterval <- summarize(group_by(activity, interval), meanSteps=mean(steps, na.rm = TRUE))
plot(byInterval$interval, byInterval$meanSteps, type = "l")
max(byInterval$meanSteps)
filter(byInterval, meanSteps = max(byInterval$meanSteps))
filter(byInterval, meanSteps == max(byInterval$meanSteps))
filter(byInterval, meanSteps == max(byInterval$meanSteps))[1]
filter(byInterval, meanSteps == max(byInterval$meanSteps))[[1]]
str(byInterval)
library(sqldf)
df3 <- sqldf("SELECT steps, date, interval, meanSteps
FROM activity
JOIN byInterval USING(interval)")
View(df3)
df3 <- sqldf("SELECT steps = case when steps is NULL
then meanSteps
else steps
end,
date, interval
FROM activity
JOIN byInterval USING(interval)")
View(df3)
df3 <- sqldf("SELECT steps = case when activity.steps is NULL
then byInterval.meanSteps
else activity.steps
end,
date, interval
FROM activity
JOIN byInterval USING(interval)")
df3 <- sqldf("SELECT steps = case when activity.steps is NA
then byInterval.meanSteps
else activity.steps
end,
date, interval
FROM activity
JOIN byInterval USING(interval)")
df3 <- sqldf("SELECT case when activity.steps is null
then byInterval.meanSteps
else activity.steps
end as steps,
date, interval
FROM activity
JOIN byInterval USING(interval)")
df3 <- sqldf("SELECT case when activity.steps is null
then round(byInterval.meanSteps)
else activity.steps
end as steps,
date, interval
FROM activity
JOIN byInterval USING(interval)")
imputedByDate <- summarize(group_by(imputedActivity, date), dailySteps=sum(steps))
imputedActivity <- sqldf("SELECT case when activity.steps is null
then round(byInterval.meanSteps)
else activity.steps
end as steps,
date, interval
FROM activity
JOIN byInterval USING(interval)")
imputedByDate <- summarize(group_by(imputedActivity, date), dailySteps=sum(steps))
hist(imputedByDate$dailySteps)
mean(imputedByDate$dailySteps)
median(imputedByDate$dailySteps)
hist(imputedByDate$dailySteps, bins=30)
hist(imputedByDate$dailySteps, breaks = 30)
hist(byDate$dailySteps, breaks = 30)
?weekdays
weekdays(head(imputedActivity$date), abbreviate = TRUE)
lapply(head(imputedActivity$date), function(x) { weekday(x, abbreviate = TRUE) in c("Sat", "Sun")})
lapply(head(imputedActivity$date), function(x) {
day <- weekday(x, abbreviate = TRUE)
day == "Sat" || day == "Sun"
})
lapply(head(imputedActivity$date), function(x) {
day <- weekdays(x, abbreviate = TRUE)
day == "Sat" || day == "Sun"
})
weekend <- function(x) {
day <- weekdays(x, abbreviate = TRUE)
lapply(day, function(d) { d == "Sat" || d == "Sun" }
}
weekend <- function(x) {
day <- weekdays(x, abbreviate = TRUE)
lapply(day, function(d) { d == "Sat" || d == "Sun" } )
}
weekend(head(imputedActivity$date))
weekend(tail(imputedActivity$date))
tail(imputedActivity$date)
weekdays(tail(imputedActivity$date))
weekend(c(as.Date("2016-09-10"))
)
weekend(c(as.Date("2016-09-09")))
weekend(c(as.Date("2016-09-11")))
weekend(c(as.Date("2016-09-12")))
imputedActivity$weekend <- weekend(imputedActivity$date)
View(imputedActivity)
str(imputedActivity)
head(imputedActivity)
summary(imputedActivity)
str(imputedActivity)
weekend <- function(x) {
day <- weekdays(x, abbreviate = TRUE)
day == "Sat" || day == "Sun"
}
weekdays(tail(imputedActivity$date))
weekend(tail(imputedActivity$date))
weekend(c(as.Date("2016-09-12")))
weekend(c(as.Date("2016-09-11")))
weekend(c(as.Date("2016-09-11"),as.Date("2016-09-12")))
imputedActivity$weekend <- weekend(imputedActivity$date)
str(imputedActivity)
summary(imputedActivity)
t <- mutate(imputedActivity, weekend = weekend(date))
View(t)
str(t)
summary(t)
t <- mutate(imputedActivity, w = weekend(date))
View(t)
summary(t)
weekend <- function(x) {
day <- weekdays(x, abbreviate = TRUE)
sapply(day, function(d) {d == "Sat" || day == "Sun"})
}
weekend(c(as.Date("2016-09-11"),as.Date("2016-09-12")))
imputedActivity$weekend <- weekend(imputedActivity$date)
str(imputedActivity)
summary(imputedActivity)
head(imputedActivity[weekend == TRUE])
head(imputedActivity[imputedActivity$weekend == TRUE])
head(select(imputedActivity, weekend == TRUE))
head(filter(imputedActivity, weekend == TRUE))
weekend(c(as.Date("2012-10-06"),as.Date("2012-10-08")))
dayType <- function(x) {
day <- weekdays(x, abbreviate = TRUE)
sapply(day, function(d)
if (d == "Sat" || day == "Sun") {
as.factor("weekend")
} else {
as.factor("weekday")
}
)
}
imputedActivity$dayType <- dayType(imputedActivity$date)
str(imputedActivity)
imputedByInterval <- summarize(group_by(imputedActivity, dayType + interval), meanSteps=mean(steps))
?group_by
imputedByInterval <- summarize(group_by(imputedActivity, dayType, interval), meanSteps=mean(steps))
plot(meanSteps ~ dayType + interval, imputedByInterval, type = "l")
xyplot(meanSteps ~ interval| dayType, data = imputedByInterval, type = "l")
library(lattice)
xyplot(meanSteps ~ interval| dayType, data = imputedByInterval, type = "l")
?time
??time of day from seconds
?timeDate
??timeData
??timeDate
filter(byInterval, meanSteps == max(byInterval$meanSteps))
835/60
max(activity$interval)
2355/60
0:2400 step 100
seq(0, 2400, 100)
seq(0, 2400, 300)
seq(0, 2400, 240)
displayTime(seq(0, 2400, 240)
)
displayTime <- function(mins) {
paste(sprintf("%02d", floor(mins / 100)),
sprintf("%02d", floor(mins %% 100)),
sprintf("%02d", 0),
sep=":"
)
}
displayTime(seq(0, 2400, 240))
displayTime(seq(0, 2400, 3000))
displayTime(seq(0, 2400, 300))
group_by(byDate, date)
group_by(byDate, date)$date
sapply(group_by(byDate, date)$date, function(d) {})
dates <- mapply(function(d, idx) {
if (idx == 1 || idx %% 7 == 0) {
return(d)
}
}, group_by(byDate, date)$date, seq_along(group_by(byDate, date)))
dates <- mapply(function(d, idx) {
if (idx == 1 || idx %% 7 == 0) {
return(d)
}
}, group_by(byDate, date)$date, seq(1, nrow(group_by(byDate, date)))
)
dates
dates[c( TRUE, rep(FALSE,5))]
dates <- group_by(byDate, date)
dates[c( TRUE, rep(FALSE,5))]
dates[seq(1, length(a), 6)]
dates[seq(1, length(dates), 6)]
d <- dates[seq(1, length(dates), 6)]
d
View(df3)
seq(1, length(dates), 6)
?seq
length(dates)
seq(1, nrow(dates), 6)
d <- dates[seq(1, nrow(dates), 6)]
d <- dates[seq(1, nrow(dates), 6),]
d
d <- dates[seq(1, nrow(dates), 6),]$date
d
