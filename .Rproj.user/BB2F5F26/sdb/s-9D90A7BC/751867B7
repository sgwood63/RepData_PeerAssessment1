{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\nauthor: Sherman Wood\ndate: September 11, 2016\noutput: \n  html_document:\n    keep_md: true\n---\n```{r setup, message = FALSE, echo=FALSE}\nknitr::opts_chunk$set(message = FALSE)\nlibrary(dplyr)\nlibrary(sqldf)\nlibrary(lattice)\n```\n## Summary\n\nWe will analyze data from a personal activity monitoring device to determine activity patterns over time.\n\n## Loading and preprocessing the data\n\nThe device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November, 2012 and include the number of steps taken in 5 minute intervals each day.\n\nThe variables included in this dataset are:\n\n- steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)\n- date: The date on which the measurement was taken in YYYY-MM-DD format\n- interval: Identifier for the 5-minute interval in which measurement was taken. integer as HHMM\n\nThe dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.\n\nWe load the data, controlling the column types (classes). There are some \"NA\"s in the data, which we will leave for now.\n\n```{r load}\nunzip(\"activity.zip\")\nactivity <- read.csv(\"activity.csv\", colClasses=c(\"integer\",\"Date\", \"integer\"), na.strings = c(\"NA\"))\n```\n\nLet's have a look at the data.\n\n```{r daily steps}\nbyDate <- summarize(group_by(activity, date), steps=sum(steps))\nhist(byDate$steps, breaks = 30, main = \"Frequency of Total Steps Per Day\",\n     xlab=\"Total Steps per day\", ylab = \"Number of Days\")\n\ndates <- group_by(byDate, date)\n\nplot(byDate$date, byDate$steps, type = \"l\", main = \"Steps per Day over time\", \n     xlab = \"Date\", ylab = \"Steps per Day\", xaxt = \"n\")\n\naxis.Date(1, at=dates[seq(1, nrow(dates), 6),]$date, format = \"%m-%d\")\n\n```\n\n## What is mean total number of steps taken per day?\n\nThe mean number of steps per day by the person was  : `r format(round(mean(byDate$steps, na.rm = TRUE), 4), scientific = FALSE, digits=6)`.\n\nThe median number of steps per day by the person was: `r format(round(median(byDate$steps, na.rm = TRUE), 4), scientific = FALSE, digits=6)`.\n\n## What is the average daily activity pattern?\n\n```{r activity pattern}\nbyInterval <- summarize(group_by(activity, interval), meanSteps=mean(steps, na.rm = TRUE))\n\n# integer as hhmm\ndisplayTime <- function(mins) {\n  paste(sprintf(\"%02d\", floor(mins / 100)),\n        sprintf(\"%02d\", floor(mins %% 100)),\n        sep=\":\"\n  )\n}\n\nplot(byInterval$interval, byInterval$meanSteps, type = \"l\", main = \"Average number of steps per 5 min interval during day\", \n     xlab = \"Time of Day\", ylab = \"Average number of steps per 5 min\", xaxt = \"n\")\naxis(1, at=seq(0, 2400, 300), labels=displayTime(seq(0, 2400, 300)) )\n```\n\nThe time of day when the person took the most steps on average was: `r displayTime(filter(byInterval, meanSteps == max(byInterval$meanSteps))[[1]])`.\n\n## Imputing missing values\n\nThere are `r nrow(filter(activity, is.na(steps)))` NAs in the original data, which is `r format(nrow(filter(activity, is.na(steps))) * 100 /nrow(activity), scientific = FALSE, digits=4)`% of the base data set. \n\nFor cleaner results, we will impute missing step values by replacing NAs with the mean number of steps in the corresponding 5 min interval of the row.\n\n```{r impute activity}\nimputedActivity <- sqldf(\"SELECT case \n                          when activity.steps is null \n                              then round(byInterval.meanSteps)\n                          else\n                            activity.steps\n                          end as steps,\n                          date,\n                          interval\n                          FROM activity\n                          JOIN byInterval USING(interval)\")\n              \nimputedByDate <- summarize(group_by(imputedActivity, date), steps=sum(steps))\n              \nhist(imputedByDate$steps, breaks = 30, main = \"Frequency of Total Steps Per Day: Imputed Data\",\n     xlab=\"Total Steps per day\", ylab = \"Number of Days\")\n```\n\nAfter imputing the missing values:\n\n- The mean number of steps per day by the person was  : `r format(round(mean(imputedByDate$steps),4), scientific = FALSE)`.\n- The median number of steps per day by the person was: `r format(round(median(imputedByDate$steps), 4), scientific = FALSE)`.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nLet's compare the person's activity between weekdays and weekends.\n```{r day type, fig.width=10}\ndayType <- function(x) {\n    day <- weekdays(x, abbreviate = TRUE)\n    sapply(day, function(d) \n      if (d == \"Sat\" || day == \"Sun\") {\n        as.factor(\"weekend\")\n      } else {\n        as.factor(\"weekday\")\n      }\n    )\n}\n\nimputedActivity$dayType <- dayType(imputedActivity$date)\n\nimputedByInterval <- summarize(group_by(imputedActivity, dayType, interval), meanSteps=mean(steps))\nxyplot(meanSteps ~ interval | dayType, data = imputedByInterval, type = \"l\", main = \"Average number of steps per 5 min interval\", \n     xlab = \"Time of Day\", ylab = \"Average number of steps per 5 min\",\n     scales = list(\n          x=list(\n            at=seq(0, 2400, 300), \n            labels=displayTime(seq(0, 2400, 300))\n          )\n     )\n)\n```\n\nThis person is more active on the weekend.\n\n",
    "created" : 1473510347335.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "468347868",
    "id" : "751867B7",
    "lastKnownWriteTime" : 1473599067,
    "last_content_update" : 1473599067427,
    "path" : "~/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}